{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7","program":"C:\\Users\\ruben\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=6e6cf777be979fa0","-C","extra-filename=-6e6cf777be979fa0","--out-dir","c:\\Users\\ruben\\IdeaProjects\\HM310P_rs\\example\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\ruben\\IdeaProjects\\HM310P_rs\\example\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\ruben\\IdeaProjects\\HM310P_rs\\example\\target\\rls\\debug\\deps\\libbytes-2c67abcd9797eb57.rmeta","--extern","futures_core=c:\\Users\\ruben\\IdeaProjects\\HM310P_rs\\example\\target\\rls\\debug\\deps\\libfutures_core-6d82f48b8c65d0ad.rmeta","--extern","futures_sink=c:\\Users\\ruben\\IdeaProjects\\HM310P_rs\\example\\target\\rls\\debug\\deps\\libfutures_sink-914e0d4fc4f93260.rmeta","--extern","log=c:\\Users\\ruben\\IdeaProjects\\HM310P_rs\\example\\target\\rls\\debug\\deps\\liblog-ed5c7f46bce7543e.rmeta","--extern","pin_project_lite=c:\\Users\\ruben\\IdeaProjects\\HM310P_rs\\example\\target\\rls\\debug\\deps\\libpin_project_lite-1a13a9be41c71b23.rmeta","--extern","tokio=c:\\Users\\ruben\\IdeaProjects\\HM310P_rs\\example\\target\\rls\\debug\\deps\\libtokio-503c821f85fea5ad.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\ruben\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\ruben\\IdeaProjects\\HM310P_rs\\example\\target\\rls\\debug\\deps\\libtokio_util-6e6cf777be979fa0.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[9964856966574864529,16590122370421837949]},"crate_root":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src","external_crates":[{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":13,"id":{"name":"futures_core","disambiguator":[831951454392093988,2502306125832767813]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":14,"id":{"name":"futures_sink","disambiguator":[8702589429242716368,1255267967564786385]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":15,"id":{"name":"tokio","disambiguator":[5208829574607139706,7967533716290741188]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":16,"id":{"name":"parking_lot","disambiguator":[3086607489180617741,15596338661872322111]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":17,"id":{"name":"instant","disambiguator":[13787143228651035418,7849709496062655784]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":18,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":19,"id":{"name":"lock_api","disambiguator":[15669188909064515467,6996219880840778859]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":20,"id":{"name":"scopeguard","disambiguator":[429372990002042441,15390206183276144831]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":21,"id":{"name":"parking_lot_core","disambiguator":[3024250535838961401,3567505373625097232]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":22,"id":{"name":"smallvec","disambiguator":[10335179676509000343,5325238430108600201]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":23,"id":{"name":"winapi","disambiguator":[13516222011418902359,17157346394894465145]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[11145044398647844038,1754875704862628470]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":25,"id":{"name":"mio","disambiguator":[16851275982607175040,2192319252237474089]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","num":26,"id":{"name":"log","disambiguator":[8434180752542844576,7478564355566721133]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":27,"id":{"name":"ntapi","disambiguator":[536160713946477033,12625095554354806227]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":28,"id":{"name":"miow","disambiguator":[4613193040762804806,17767451154905157867]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","num":29,"id":{"name":"bytes","disambiguator":[12595859187363061226,7350415556848099111]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":30,"id":{"name":"once_cell","disambiguator":[11765332737236318135,18363009322869149338]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":31,"id":{"name":"tokio_macros","disambiguator":[14884642052301323943,17028965449004787139]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":32,"id":{"name":"memchr","disambiguator":[15325686510333312776,12136192400079001465]}},{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","num":33,"id":{"name":"num_cpus","disambiguator":[1184051024092738984,14181662015155594580]}}],"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854341,"byte_end":11854351,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854390,"byte_end":11854397,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854436,"byte_end":11854443,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854605,"byte_end":11854611,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854613,"byte_end":11854624,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854672,"byte_end":11854682,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854731,"byte_end":11854742,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854804,"byte_end":11854824,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854826,"byte_end":11854851,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854900,"byte_end":11854910,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854912,"byte_end":11854927,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854992,"byte_end":11855009,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11855011,"byte_end":11855033,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":12}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":346},{"krate":0,"index":12},{"krate":0,"index":274},{"krate":0,"index":321}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844069,"byte_end":11844122,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844123,"byte_end":11844126,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844127,"byte_end":11844202,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844203,"byte_end":11844268,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844269,"byte_end":11844272,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844273,"byte_end":11844353,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844354,"byte_end":11844429,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844430,"byte_end":11844478,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844479,"byte_end":11844482,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844483,"byte_end":11844506,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844507,"byte_end":11844510,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844511,"byte_end":11844590,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844591,"byte_end":11844670,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844671,"byte_end":11844742,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844743,"byte_end":11844813,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844814,"byte_end":11844892,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844893,"byte_end":11844969,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11844970,"byte_end":11845003,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845004,"byte_end":11845007,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845008,"byte_end":11845088,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845089,"byte_end":11845169,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845170,"byte_end":11845220,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845221,"byte_end":11845224,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845225,"byte_end":11845276,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845277,"byte_end":11845326,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845327,"byte_end":11845378,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845379,"byte_end":11845382,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845383,"byte_end":11845448,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845449,"byte_end":11845452,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845453,"byte_end":11845530,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845531,"byte_end":11845572,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845573,"byte_end":11845576,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845577,"byte_end":11845657,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845658,"byte_end":11845737,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845738,"byte_end":11845816,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845817,"byte_end":11845896,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845897,"byte_end":11845911,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845912,"byte_end":11845915,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845916,"byte_end":11845995,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11845996,"byte_end":11846075,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846076,"byte_end":11846093,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846094,"byte_end":11846097,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846098,"byte_end":11846175,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846176,"byte_end":11846255,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846256,"byte_end":11846333,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846334,"byte_end":11846404,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846405,"byte_end":11846454,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846455,"byte_end":11846458,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846459,"byte_end":11846472,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846473,"byte_end":11846505,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846506,"byte_end":11846573,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846574,"byte_end":11846688,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846689,"byte_end":11846726,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846727,"byte_end":11846788,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846789,"byte_end":11846838,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846839,"byte_end":11846842,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846843,"byte_end":11846884,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846885,"byte_end":11846895,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846896,"byte_end":11846980,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11846981,"byte_end":11847037,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847038,"byte_end":11847041,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847042,"byte_end":11847063,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847064,"byte_end":11847131,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847132,"byte_end":11847160,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847161,"byte_end":11847174,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847175,"byte_end":11847193,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847194,"byte_end":11847203,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847204,"byte_end":11847207,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847208,"byte_end":11847267,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847268,"byte_end":11847292,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847293,"byte_end":11847302,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847303,"byte_end":11847308,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847309,"byte_end":11847317,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847318,"byte_end":11847325,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847326,"byte_end":11847400,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847401,"byte_end":11847404,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847405,"byte_end":11847427,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847428,"byte_end":11847431,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847432,"byte_end":11847509,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847510,"byte_end":11847586,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847587,"byte_end":11847666,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847667,"byte_end":11847721,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847722,"byte_end":11847725,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847726,"byte_end":11847770,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847771,"byte_end":11847778,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847779,"byte_end":11847814,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847815,"byte_end":11847846,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847847,"byte_end":11847850,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847851,"byte_end":11847880,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847881,"byte_end":11847884,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847885,"byte_end":11847924,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847925,"byte_end":11847928,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847929,"byte_end":11847967,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847968,"byte_end":11847995,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11847996,"byte_end":11848032,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848033,"byte_end":11848036,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848037,"byte_end":11848055,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848056,"byte_end":11848078,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848079,"byte_end":11848109,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848110,"byte_end":11848164,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848165,"byte_end":11848195,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848196,"byte_end":11848253,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848254,"byte_end":11848286,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848287,"byte_end":11848300,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848301,"byte_end":11848304,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848305,"byte_end":11848339,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848340,"byte_end":11848384,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848385,"byte_end":11848437,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848438,"byte_end":11848505,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848506,"byte_end":11848509,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848510,"byte_end":11848584,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848585,"byte_end":11848651,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848652,"byte_end":11848681,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848682,"byte_end":11848729,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848730,"byte_end":11848782,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848783,"byte_end":11848854,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848855,"byte_end":11848874,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848875,"byte_end":11848888,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848889,"byte_end":11848892,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848893,"byte_end":11848932,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848933,"byte_end":11848988,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11848989,"byte_end":11849007,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849008,"byte_end":11849084,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849085,"byte_end":11849151,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849152,"byte_end":11849204,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849205,"byte_end":11849208,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849209,"byte_end":11849289,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849290,"byte_end":11849315,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849316,"byte_end":11849348,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849349,"byte_end":11849362,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849363,"byte_end":11849366,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849367,"byte_end":11849439,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849440,"byte_end":11849466,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849467,"byte_end":11849518,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849519,"byte_end":11849555,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849556,"byte_end":11849559,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849560,"byte_end":11849638,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849639,"byte_end":11849682,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849683,"byte_end":11849730,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849731,"byte_end":11849767,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849768,"byte_end":11849812,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849813,"byte_end":11849869,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849870,"byte_end":11849918,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849919,"byte_end":11849941,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849942,"byte_end":11849960,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849961,"byte_end":11849974,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849975,"byte_end":11849984,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849985,"byte_end":11849990,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849991,"byte_end":11849998,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11849999,"byte_end":11850002,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850003,"byte_end":11850026,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850027,"byte_end":11850030,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850031,"byte_end":11850109,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850110,"byte_end":11850183,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850184,"byte_end":11850260,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850261,"byte_end":11850341,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850342,"byte_end":11850358,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850359,"byte_end":11850362,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850363,"byte_end":11850443,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850444,"byte_end":11850523,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850524,"byte_end":11850604,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850605,"byte_end":11850677,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850678,"byte_end":11850681,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850682,"byte_end":11850759,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850760,"byte_end":11850838,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850839,"byte_end":11850912,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850913,"byte_end":11850979,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850980,"byte_end":11850983,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850984,"byte_end":11850997,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11850998,"byte_end":11851031,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851032,"byte_end":11851066,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851067,"byte_end":11851104,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851105,"byte_end":11851172,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851173,"byte_end":11851208,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851209,"byte_end":11851270,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851271,"byte_end":11851317,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851318,"byte_end":11851379,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851380,"byte_end":11851383,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851384,"byte_end":11851412,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851413,"byte_end":11851416,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851417,"byte_end":11851458,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851459,"byte_end":11851469,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851470,"byte_end":11851494,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851495,"byte_end":11851569,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851570,"byte_end":11851612,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851613,"byte_end":11851627,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851628,"byte_end":11851685,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851686,"byte_end":11851735,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851736,"byte_end":11851750,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851751,"byte_end":11851788,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851789,"byte_end":11851840,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851841,"byte_end":11851887,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851888,"byte_end":11851918,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851919,"byte_end":11851933,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851934,"byte_end":11851943,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851944,"byte_end":11851949,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851950,"byte_end":11851957,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851958,"byte_end":11851965,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11851966,"byte_end":11852041,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852042,"byte_end":11852115,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852116,"byte_end":11852158,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852159,"byte_end":11852162,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852163,"byte_end":11852185,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852186,"byte_end":11852189,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852190,"byte_end":11852267,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852268,"byte_end":11852344,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852345,"byte_end":11852421,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852422,"byte_end":11852445,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852446,"byte_end":11852449,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852450,"byte_end":11852495,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852496,"byte_end":11852503,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852504,"byte_end":11852539,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852540,"byte_end":11852564,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852565,"byte_end":11852568,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852569,"byte_end":11852598,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852599,"byte_end":11852602,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852603,"byte_end":11852642,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852643,"byte_end":11852646,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852647,"byte_end":11852693,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852694,"byte_end":11852730,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852731,"byte_end":11852734,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852735,"byte_end":11852826,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852827,"byte_end":11852901,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852902,"byte_end":11852924,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852925,"byte_end":11852958,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11852959,"byte_end":11853006,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853007,"byte_end":11853059,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853060,"byte_end":11853135,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853136,"byte_end":11853155,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853156,"byte_end":11853169,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853170,"byte_end":11853173,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853174,"byte_end":11853226,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853227,"byte_end":11853304,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853305,"byte_end":11853369,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853370,"byte_end":11853373,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853374,"byte_end":11853417,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853418,"byte_end":11853458,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853459,"byte_end":11853462,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853463,"byte_end":11853520,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853521,"byte_end":11853567,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853568,"byte_end":11853619,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853620,"byte_end":11853638,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853639,"byte_end":11853648,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853649,"byte_end":11853654,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853655,"byte_end":11853662,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853663,"byte_end":11853666,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853667,"byte_end":11853706,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853707,"byte_end":11853748,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853749,"byte_end":11853785,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853786,"byte_end":11853818,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853819,"byte_end":11853915,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853916,"byte_end":11853967,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11853968,"byte_end":11854021,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854022,"byte_end":11854065,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854066,"byte_end":11854110,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854111,"byte_end":11854159,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854160,"byte_end":11854208,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854209,"byte_end":11854255,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854256,"byte_end":11854295,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856319,"byte_end":11856329,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855162,"byte_end":11855247,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855248,"byte_end":11855251,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855252,"byte_end":11855290,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855291,"byte_end":11855329,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855330,"byte_end":11855333,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855334,"byte_end":11855347,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855348,"byte_end":11855351,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855352,"byte_end":11855433,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855434,"byte_end":11855437,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855438,"byte_end":11855477,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855478,"byte_end":11855511,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855512,"byte_end":11855541,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855542,"byte_end":11855545,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855546,"byte_end":11855553,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855554,"byte_end":11855572,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855573,"byte_end":11855603,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855604,"byte_end":11855628,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855629,"byte_end":11855636,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855637,"byte_end":11855666,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855667,"byte_end":11855719,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855720,"byte_end":11855723,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855724,"byte_end":11855742,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855743,"byte_end":11855760,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855761,"byte_end":11855841,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855842,"byte_end":11855876,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855877,"byte_end":11855930,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855931,"byte_end":11855942,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855943,"byte_end":11855950,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855951,"byte_end":11855956,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11855957,"byte_end":11856004,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856005,"byte_end":11856058,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856059,"byte_end":11856117,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856118,"byte_end":11856197,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856198,"byte_end":11856210,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856211,"byte_end":11856218,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856219,"byte_end":11856226,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856227,"byte_end":11856230,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856431,"byte_end":11856434,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856358,"byte_end":11856419,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858434,"byte_end":11858441,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857149,"byte_end":11857184,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857185,"byte_end":11857188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857189,"byte_end":11857258,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857259,"byte_end":11857338,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857339,"byte_end":11857411,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857412,"byte_end":11857436,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857437,"byte_end":11857440,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857441,"byte_end":11857509,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857510,"byte_end":11857587,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857588,"byte_end":11857649,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857650,"byte_end":11857653,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857654,"byte_end":11857715,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857716,"byte_end":11857778,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857779,"byte_end":11857782,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857783,"byte_end":11857846,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857847,"byte_end":11857910,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857911,"byte_end":11857990,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11857991,"byte_end":11858065,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858066,"byte_end":11858085,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858086,"byte_end":11858089,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858090,"byte_end":11858158,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858159,"byte_end":11858221,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858222,"byte_end":11858297,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ reseting the entire internal state.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858298,"byte_end":11858337,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858338,"byte_end":11858341,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858342,"byte_end":11858378,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858379,"byte_end":11858423,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858489,"byte_end":11858493,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858448,"byte_end":11858479,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859259,"byte_end":11859264,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858500,"byte_end":11858552,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858557,"byte_end":11858560,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858565,"byte_end":11858634,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858639,"byte_end":11858709,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858714,"byte_end":11858760,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858765,"byte_end":11858768,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858773,"byte_end":11858849,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858854,"byte_end":11858929,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11858934,"byte_end":11859009,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859014,"byte_end":11859054,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859059,"byte_end":11859062,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859067,"byte_end":11859141,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859146,"byte_end":11859192,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859197,"byte_end":11859200,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859205,"byte_end":11859249,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862200,"byte_end":11862206,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859288,"byte_end":11859353,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859358,"byte_end":11859361,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859366,"byte_end":11859440,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859445,"byte_end":11859517,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859522,"byte_end":11859595,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859600,"byte_end":11859643,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859648,"byte_end":11859651,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859656,"byte_end":11859729,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859734,"byte_end":11859797,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859802,"byte_end":11859877,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859882,"byte_end":11859957,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859962,"byte_end":11859985,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859990,"byte_end":11859993,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11859998,"byte_end":11860070,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860075,"byte_end":11860149,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860154,"byte_end":11860224,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860229,"byte_end":11860232,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860237,"byte_end":11860305,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860310,"byte_end":11860381,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860386,"byte_end":11860466,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860471,"byte_end":11860483,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860488,"byte_end":11860491,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860496,"byte_end":11860566,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860571,"byte_end":11860646,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860651,"byte_end":11860688,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860693,"byte_end":11860696,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860701,"byte_end":11860737,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860742,"byte_end":11860786,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860791,"byte_end":11860794,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860799,"byte_end":11860822,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860827,"byte_end":11860830,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860835,"byte_end":11860909,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860914,"byte_end":11860988,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11860993,"byte_end":11861046,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861051,"byte_end":11861054,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861059,"byte_end":11861130,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861135,"byte_end":11861205,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861210,"byte_end":11861226,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861231,"byte_end":11861234,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861239,"byte_end":11861252,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861257,"byte_end":11861275,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861280,"byte_end":11861285,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861290,"byte_end":11861316,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861321,"byte_end":11861358,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861363,"byte_end":11861368,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861373,"byte_end":11861394,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861399,"byte_end":11861404,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861409,"byte_end":11861439,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861444,"byte_end":11861458,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861463,"byte_end":11861494,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861499,"byte_end":11861532,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861537,"byte_end":11861540,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861545,"byte_end":11861638,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861643,"byte_end":11861661,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861666,"byte_end":11861669,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861674,"byte_end":11861746,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861751,"byte_end":11861811,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861816,"byte_end":11861868,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861873,"byte_end":11861935,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11861940,"byte_end":11862007,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862012,"byte_end":11862015,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862020,"byte_end":11862048,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862053,"byte_end":11862062,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862067,"byte_end":11862072,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862077,"byte_end":11862084,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862089,"byte_end":11862092,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862097,"byte_end":11862166,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862171,"byte_end":11862192,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863372,"byte_end":11863382,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862287,"byte_end":11862359,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862364,"byte_end":11862413,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862418,"byte_end":11862421,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862426,"byte_end":11862494,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862499,"byte_end":11862566,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862571,"byte_end":11862639,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862644,"byte_end":11862720,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862725,"byte_end":11862791,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862796,"byte_end":11862799,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862804,"byte_end":11862872,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862877,"byte_end":11862952,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11862957,"byte_end":11863032,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863037,"byte_end":11863109,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863114,"byte_end":11863156,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863161,"byte_end":11863164,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863169,"byte_end":11863244,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863249,"byte_end":11863327,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863332,"byte_end":11863364,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864990,"byte_end":11864996,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863800,"byte_end":11863880,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863885,"byte_end":11863961,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863966,"byte_end":11863969,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11863974,"byte_end":11864049,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864054,"byte_end":11864124,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864129,"byte_end":11864200,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864205,"byte_end":11864277,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864282,"byte_end":11864340,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864345,"byte_end":11864348,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864353,"byte_end":11864422,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864427,"byte_end":11864502,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864507,"byte_end":11864583,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864588,"byte_end":11864610,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864615,"byte_end":11864618,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864623,"byte_end":11864696,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864701,"byte_end":11864774,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864779,"byte_end":11864855,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864860,"byte_end":11864863,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864868,"byte_end":11864904,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864909,"byte_end":11864941,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\decoder.rs","byte_start":11864946,"byte_end":11864982,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865330,"byte_end":11865337,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865175,"byte_end":11865247,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865248,"byte_end":11865268,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865269,"byte_end":11865272,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865273,"byte_end":11865319,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865602,"byte_end":11865607,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865350,"byte_end":11865382,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865387,"byte_end":11865390,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865395,"byte_end":11865472,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865477,"byte_end":11865533,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865538,"byte_end":11865541,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865546,"byte_end":11865592,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865958,"byte_end":11865964,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865631,"byte_end":11865676,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865681,"byte_end":11865684,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865689,"byte_end":11865763,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865768,"byte_end":11865848,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865853,"byte_end":11865891,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865896,"byte_end":11865899,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\encoder.rs","byte_start":11865904,"byte_end":11865950,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11876781,"byte_end":11876787,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1121}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878560,"byte_end":11878563,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11876929,"byte_end":11877009,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877014,"byte_end":11877095,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877100,"byte_end":11877103,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877108,"byte_end":11877183,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877188,"byte_end":11877258,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877263,"byte_end":11877332,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877337,"byte_end":11877409,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877414,"byte_end":11877472,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877477,"byte_end":11877480,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877485,"byte_end":11877556,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877561,"byte_end":11877638,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877643,"byte_end":11877719,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877724,"byte_end":11877746,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877751,"byte_end":11877754,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877759,"byte_end":11877832,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877837,"byte_end":11877910,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877915,"byte_end":11877991,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11877996,"byte_end":11877999,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878004,"byte_end":11878080,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878085,"byte_end":11878161,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878166,"byte_end":11878241,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878246,"byte_end":11878281,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878286,"byte_end":11878289,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878294,"byte_end":11878330,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878335,"byte_end":11878367,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878372,"byte_end":11878409,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878414,"byte_end":11878452,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878457,"byte_end":11878548,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880171,"byte_end":11880184,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878776,"byte_end":11878856,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878861,"byte_end":11878942,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11878947,"byte_end":11878996,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879001,"byte_end":11879004,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879009,"byte_end":11879084,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879089,"byte_end":11879159,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879164,"byte_end":11879233,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879238,"byte_end":11879310,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879315,"byte_end":11879373,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879378,"byte_end":11879381,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879386,"byte_end":11879457,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879462,"byte_end":11879539,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879544,"byte_end":11879620,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879625,"byte_end":11879647,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879652,"byte_end":11879655,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879660,"byte_end":11879733,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879738,"byte_end":11879811,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879816,"byte_end":11879892,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879897,"byte_end":11879900,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879905,"byte_end":11879941,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879946,"byte_end":11879978,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11879983,"byte_end":11880020,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880025,"byte_end":11880063,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880068,"byte_end":11880159,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882287,"byte_end":11882297,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880710,"byte_end":11880790,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880795,"byte_end":11880876,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880881,"byte_end":11880884,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880889,"byte_end":11880964,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880969,"byte_end":11881039,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881044,"byte_end":11881115,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881120,"byte_end":11881192,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881197,"byte_end":11881255,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881260,"byte_end":11881263,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881268,"byte_end":11881339,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881344,"byte_end":11881421,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881426,"byte_end":11881502,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881507,"byte_end":11881529,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881534,"byte_end":11881537,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881542,"byte_end":11881621,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881626,"byte_end":11881703,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881708,"byte_end":11881711,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881716,"byte_end":11881789,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881794,"byte_end":11881867,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881872,"byte_end":11881948,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881953,"byte_end":11881956,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11881961,"byte_end":11881997,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882002,"byte_end":11882034,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882039,"byte_end":11882077,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882082,"byte_end":11882120,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882125,"byte_end":11882179,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882184,"byte_end":11882275,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882932,"byte_end":11882939,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882649,"byte_end":11882712,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882717,"byte_end":11882730,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882735,"byte_end":11882738,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882743,"byte_end":11882818,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882823,"byte_end":11882893,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882898,"byte_end":11882920,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883283,"byte_end":11883290,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11882992,"byte_end":11883063,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883068,"byte_end":11883081,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883086,"byte_end":11883089,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883094,"byte_end":11883169,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883174,"byte_end":11883244,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883249,"byte_end":11883271,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883653,"byte_end":11883664,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883355,"byte_end":11883433,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883438,"byte_end":11883451,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883456,"byte_end":11883459,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883464,"byte_end":11883539,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883544,"byte_end":11883614,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883619,"byte_end":11883641,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884011,"byte_end":11884016,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883760,"byte_end":11883818,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883823,"byte_end":11883836,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883841,"byte_end":11883844,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883849,"byte_end":11883923,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11883928,"byte_end":11883999,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884328,"byte_end":11884337,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884069,"byte_end":11884135,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884140,"byte_end":11884153,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884158,"byte_end":11884161,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884166,"byte_end":11884240,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884245,"byte_end":11884316,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884457,"byte_end":11884468,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884402,"byte_end":11884445,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884603,"byte_end":11884618,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884540,"byte_end":11884591,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884758,"byte_end":11884770,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884702,"byte_end":11884746,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884907,"byte_end":11884923,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11884843,"byte_end":11884895,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885273,"byte_end":11885283,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885008,"byte_end":11885071,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885076,"byte_end":11885079,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885084,"byte_end":11885159,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885164,"byte_end":11885234,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885239,"byte_end":11885261,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885655,"byte_end":11885665,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885333,"byte_end":11885407,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885412,"byte_end":11885453,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885458,"byte_end":11885461,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885466,"byte_end":11885541,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885546,"byte_end":11885616,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11885621,"byte_end":11885643,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887639,"byte_end":11887650,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887324,"byte_end":11887395,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887396,"byte_end":11887468,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887469,"byte_end":11887529,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887530,"byte_end":11887533,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887534,"byte_end":11887570,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887588,"byte_end":11887627,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887736,"byte_end":11887738,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887663,"byte_end":11887727,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887770,"byte_end":11887775,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887748,"byte_end":11887761,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887840,"byte_end":11887848,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887785,"byte_end":11887831,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887935,"byte_end":11887944,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887865,"byte_end":11887926,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11888177,"byte_end":11888180,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11888125,"byte_end":11888165,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11888909,"byte_end":11888919,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1080}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889170,"byte_end":11889173,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889102,"byte_end":11889158,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889521,"byte_end":11889534,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889405,"byte_end":11889487,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889492,"byte_end":11889509,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890248,"byte_end":11890255,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889961,"byte_end":11890024,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890029,"byte_end":11890046,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890051,"byte_end":11890054,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890059,"byte_end":11890134,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890139,"byte_end":11890209,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890214,"byte_end":11890236,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890603,"byte_end":11890610,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890308,"byte_end":11890379,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890384,"byte_end":11890401,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890406,"byte_end":11890409,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890414,"byte_end":11890489,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890494,"byte_end":11890564,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890569,"byte_end":11890591,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890977,"byte_end":11890988,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890675,"byte_end":11890753,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890758,"byte_end":11890775,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890780,"byte_end":11890783,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890788,"byte_end":11890863,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890868,"byte_end":11890938,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11890943,"byte_end":11890965,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891353,"byte_end":11891363,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891084,"byte_end":11891151,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891156,"byte_end":11891159,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891164,"byte_end":11891239,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891244,"byte_end":11891314,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891319,"byte_end":11891341,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891475,"byte_end":11891482,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891413,"byte_end":11891463,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891605,"byte_end":11891616,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891535,"byte_end":11891593,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891736,"byte_end":11891747,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891681,"byte_end":11891724,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891877,"byte_end":11891892,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11891814,"byte_end":11891865,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11893993,"byte_end":11894004,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1039}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894211,"byte_end":11894214,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894142,"byte_end":11894199,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894772,"byte_end":11894779,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894484,"byte_end":11894547,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894552,"byte_end":11894570,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894575,"byte_end":11894578,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894583,"byte_end":11894658,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894663,"byte_end":11894733,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894738,"byte_end":11894760,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895128,"byte_end":11895135,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894832,"byte_end":11894903,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894908,"byte_end":11894926,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894931,"byte_end":11894934,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894939,"byte_end":11895014,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895019,"byte_end":11895089,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895094,"byte_end":11895116,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895503,"byte_end":11895514,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895200,"byte_end":11895278,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895283,"byte_end":11895301,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895306,"byte_end":11895309,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895314,"byte_end":11895389,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895394,"byte_end":11895464,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895469,"byte_end":11895491,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895880,"byte_end":11895890,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895610,"byte_end":11895678,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895683,"byte_end":11895686,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895691,"byte_end":11895766,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895771,"byte_end":11895841,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895846,"byte_end":11895868,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11896002,"byte_end":11896009,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11895940,"byte_end":11895990,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11896132,"byte_end":11896143,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11896062,"byte_end":11896120,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11896264,"byte_end":11896276,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11896208,"byte_end":11896252,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11896407,"byte_end":11896423,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11896343,"byte_end":11896395,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":818},{"krate":0,"index":828},{"krate":0,"index":826},{"krate":0,"index":825},{"krate":0,"index":644},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":844},{"krate":0,"index":842},{"krate":0,"index":841},{"krate":0,"index":646},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11897950,"byte_end":11898002,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898003,"byte_end":11898006,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898007,"byte_end":11898077,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898078,"byte_end":11898136,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898137,"byte_end":11898209,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898210,"byte_end":11898280,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898281,"byte_end":11898348,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898349,"byte_end":11898352,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898353,"byte_end":11898374,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898375,"byte_end":11898378,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898379,"byte_end":11898454,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898455,"byte_end":11898526,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898527,"byte_end":11898598,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898599,"byte_end":11898669,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898670,"byte_end":11898710,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898711,"byte_end":11898714,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898715,"byte_end":11898722,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898723,"byte_end":11898766,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898767,"byte_end":11898825,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898826,"byte_end":11898829,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898830,"byte_end":11898885,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898886,"byte_end":11898928,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898929,"byte_end":11898934,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898935,"byte_end":11898987,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898988,"byte_end":11898993,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11898994,"byte_end":11899016,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899017,"byte_end":11899024,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899025,"byte_end":11899028,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899029,"byte_end":11899101,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899102,"byte_end":11899173,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899174,"byte_end":11899193,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899194,"byte_end":11899197,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899198,"byte_end":11899209,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899210,"byte_end":11899259,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899260,"byte_end":11899309,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899310,"byte_end":11899359,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899360,"byte_end":11899367,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899368,"byte_end":11899371,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899372,"byte_end":11899410,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899411,"byte_end":11899414,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899415,"byte_end":11899422,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899423,"byte_end":11899466,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899467,"byte_end":11899525,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899526,"byte_end":11899529,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899530,"byte_end":11899555,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899556,"byte_end":11899577,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899578,"byte_end":11899581,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899582,"byte_end":11899658,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899659,"byte_end":11899668,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899669,"byte_end":11899711,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899712,"byte_end":11899717,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899718,"byte_end":11899791,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899792,"byte_end":11899839,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899840,"byte_end":11899843,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899844,"byte_end":11899881,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899882,"byte_end":11899896,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899897,"byte_end":11899902,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899903,"byte_end":11899910,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899911,"byte_end":11899914,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899915,"byte_end":11899957,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899958,"byte_end":11899961,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899962,"byte_end":11899973,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11899974,"byte_end":11900013,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900014,"byte_end":11900053,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900054,"byte_end":11900093,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900094,"byte_end":11900101,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900102,"byte_end":11900105,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900106,"byte_end":11900120,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900121,"byte_end":11900124,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900125,"byte_end":11900200,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900201,"byte_end":11900274,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900275,"byte_end":11900341,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900342,"byte_end":11900411,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900412,"byte_end":11900477,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900478,"byte_end":11900481,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900482,"byte_end":11900498,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900499,"byte_end":11900502,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900503,"byte_end":11900579,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900580,"byte_end":11900621,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900622,"byte_end":11900625,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900626,"byte_end":11900633,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900634,"byte_end":11900665,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900666,"byte_end":11900716,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900717,"byte_end":11900758,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900759,"byte_end":11900794,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900795,"byte_end":11900843,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900844,"byte_end":11900875,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900876,"byte_end":11900924,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900925,"byte_end":11900974,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900975,"byte_end":11900997,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11900998,"byte_end":11901005,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901006,"byte_end":11901028,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901029,"byte_end":11901036,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901037,"byte_end":11901040,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901041,"byte_end":11901089,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901090,"byte_end":11901093,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901094,"byte_end":11901105,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901106,"byte_end":11901158,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901159,"byte_end":11901224,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901225,"byte_end":11901290,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901291,"byte_end":11901356,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901357,"byte_end":11901364,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901365,"byte_end":11901368,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901369,"byte_end":11901445,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901446,"byte_end":11901520,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901521,"byte_end":11901593,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901594,"byte_end":11901670,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901671,"byte_end":11901713,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901714,"byte_end":11901717,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901718,"byte_end":11901734,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901735,"byte_end":11901738,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901739,"byte_end":11901814,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901815,"byte_end":11901856,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901857,"byte_end":11901860,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901861,"byte_end":11901868,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901869,"byte_end":11901900,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901901,"byte_end":11901951,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901952,"byte_end":11901993,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11901994,"byte_end":11902029,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902030,"byte_end":11902078,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902079,"byte_end":11902110,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902111,"byte_end":11902159,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902160,"byte_end":11902219,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902220,"byte_end":11902242,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902243,"byte_end":11902250,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902251,"byte_end":11902273,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902274,"byte_end":11902281,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902282,"byte_end":11902285,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902286,"byte_end":11902334,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902335,"byte_end":11902338,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902339,"byte_end":11902350,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902351,"byte_end":11902400,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902401,"byte_end":11902455,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902456,"byte_end":11902510,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902511,"byte_end":11902565,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902566,"byte_end":11902573,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902574,"byte_end":11902577,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902578,"byte_end":11902651,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902652,"byte_end":11902719,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902720,"byte_end":11902723,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902724,"byte_end":11902740,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902741,"byte_end":11902744,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902745,"byte_end":11902821,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902822,"byte_end":11902894,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902895,"byte_end":11902934,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902935,"byte_end":11902938,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902939,"byte_end":11902946,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902947,"byte_end":11902978,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11902979,"byte_end":11903029,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903030,"byte_end":11903071,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903072,"byte_end":11903107,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903108,"byte_end":11903156,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903157,"byte_end":11903188,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903189,"byte_end":11903236,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903237,"byte_end":11903257,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903258,"byte_end":11903280,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903281,"byte_end":11903288,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903289,"byte_end":11903311,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903312,"byte_end":11903319,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903320,"byte_end":11903323,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903324,"byte_end":11903372,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903373,"byte_end":11903376,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903377,"byte_end":11903388,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903389,"byte_end":11903441,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903442,"byte_end":11903507,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903508,"byte_end":11903573,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903574,"byte_end":11903639,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903640,"byte_end":11903647,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903648,"byte_end":11903651,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903652,"byte_end":11903724,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903725,"byte_end":11903800,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903801,"byte_end":11903873,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903874,"byte_end":11903950,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11903951,"byte_end":11904024,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904025,"byte_end":11904028,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904029,"byte_end":11904045,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904046,"byte_end":11904049,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904050,"byte_end":11904124,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904125,"byte_end":11904192,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904193,"byte_end":11904196,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904197,"byte_end":11904204,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904205,"byte_end":11904236,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904237,"byte_end":11904287,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904288,"byte_end":11904329,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904330,"byte_end":11904365,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904366,"byte_end":11904414,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904415,"byte_end":11904446,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904447,"byte_end":11904495,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904496,"byte_end":11904516,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904517,"byte_end":11904539,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904540,"byte_end":11904547,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904548,"byte_end":11904570,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904571,"byte_end":11904578,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904579,"byte_end":11904582,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904583,"byte_end":11904631,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904632,"byte_end":11904635,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904636,"byte_end":11904647,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904648,"byte_end":11904674,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904675,"byte_end":11904720,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904721,"byte_end":11904766,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904767,"byte_end":11904812,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904813,"byte_end":11904816,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904817,"byte_end":11904845,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904846,"byte_end":11904891,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904892,"byte_end":11904937,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904938,"byte_end":11904983,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904984,"byte_end":11904991,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904992,"byte_end":11904995,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11904996,"byte_end":11905068,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905069,"byte_end":11905145,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905146,"byte_end":11905216,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905217,"byte_end":11905286,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905287,"byte_end":11905324,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905325,"byte_end":11905328,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905329,"byte_end":11905403,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905404,"byte_end":11905458,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905459,"byte_end":11905462,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905463,"byte_end":11905479,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905480,"byte_end":11905483,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905484,"byte_end":11905557,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905558,"byte_end":11905634,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905635,"byte_end":11905709,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905710,"byte_end":11905723,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905724,"byte_end":11905727,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905728,"byte_end":11905735,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905736,"byte_end":11905767,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905768,"byte_end":11905818,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905819,"byte_end":11905860,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905861,"byte_end":11905896,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905897,"byte_end":11905946,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905947,"byte_end":11905978,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11905979,"byte_end":11906027,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906028,"byte_end":11906072,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906073,"byte_end":11906095,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906096,"byte_end":11906103,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906104,"byte_end":11906126,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906127,"byte_end":11906134,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906135,"byte_end":11906138,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906139,"byte_end":11906187,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906188,"byte_end":11906191,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906192,"byte_end":11906203,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906204,"byte_end":11906230,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906231,"byte_end":11906281,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906282,"byte_end":11906332,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906333,"byte_end":11906383,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906384,"byte_end":11906387,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906388,"byte_end":11906408,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906409,"byte_end":11906439,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906440,"byte_end":11906470,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906471,"byte_end":11906501,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906502,"byte_end":11906509,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906510,"byte_end":11906513,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906514,"byte_end":11906587,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906588,"byte_end":11906663,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906664,"byte_end":11906736,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906737,"byte_end":11906775,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906776,"byte_end":11906779,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906780,"byte_end":11906854,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906855,"byte_end":11906931,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11906932,"byte_end":11907005,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907006,"byte_end":11907034,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907035,"byte_end":11907038,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907039,"byte_end":11907055,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907056,"byte_end":11907059,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907060,"byte_end":11907133,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907134,"byte_end":11907210,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907211,"byte_end":11907285,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907286,"byte_end":11907358,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907359,"byte_end":11907370,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907371,"byte_end":11907374,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907375,"byte_end":11907382,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907383,"byte_end":11907414,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907415,"byte_end":11907465,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907466,"byte_end":11907507,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907508,"byte_end":11907543,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907544,"byte_end":11907593,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907594,"byte_end":11907625,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907626,"byte_end":11907691,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907692,"byte_end":11907712,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907713,"byte_end":11907735,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907736,"byte_end":11907743,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907744,"byte_end":11907751,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907752,"byte_end":11907755,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907756,"byte_end":11907804,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907805,"byte_end":11907808,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907809,"byte_end":11907820,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907821,"byte_end":11907847,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907848,"byte_end":11907898,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907899,"byte_end":11907949,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11907950,"byte_end":11908000,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908001,"byte_end":11908004,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908005,"byte_end":11908025,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908026,"byte_end":11908056,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908057,"byte_end":11908087,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908088,"byte_end":11908118,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908119,"byte_end":11908126,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908127,"byte_end":11908130,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908131,"byte_end":11908204,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908205,"byte_end":11908279,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908280,"byte_end":11908354,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908355,"byte_end":11908428,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908429,"byte_end":11908505,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908506,"byte_end":11908539,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908540,"byte_end":11908543,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908544,"byte_end":11908560,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908561,"byte_end":11908564,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908565,"byte_end":11908639,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908640,"byte_end":11908707,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908708,"byte_end":11908711,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908712,"byte_end":11908719,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908720,"byte_end":11908751,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908752,"byte_end":11908802,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908803,"byte_end":11908844,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908845,"byte_end":11908880,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908881,"byte_end":11908929,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908930,"byte_end":11908961,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11908962,"byte_end":11909009,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909010,"byte_end":11909056,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909057,"byte_end":11909079,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909080,"byte_end":11909087,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909088,"byte_end":11909110,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909111,"byte_end":11909118,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909119,"byte_end":11909122,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909123,"byte_end":11909171,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909172,"byte_end":11909175,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909176,"byte_end":11909187,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909188,"byte_end":11909244,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909245,"byte_end":11909306,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909307,"byte_end":11909368,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909369,"byte_end":11909430,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909431,"byte_end":11909438,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909439,"byte_end":11909442,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909443,"byte_end":11909517,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909518,"byte_end":11909538,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909539,"byte_end":11909542,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909543,"byte_end":11909557,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909558,"byte_end":11909561,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909562,"byte_end":11909637,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909638,"byte_end":11909710,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909711,"byte_end":11909779,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909780,"byte_end":11909856,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909857,"byte_end":11909898,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909899,"byte_end":11909902,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909903,"byte_end":11909973,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909974,"byte_end":11909992,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909993,"byte_end":11909996,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11909997,"byte_end":11910004,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910005,"byte_end":11910037,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910038,"byte_end":11910088,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910089,"byte_end":11910133,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910134,"byte_end":11910147,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910148,"byte_end":11910183,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910184,"byte_end":11910215,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910216,"byte_end":11910239,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910240,"byte_end":11910247,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910248,"byte_end":11910270,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910271,"byte_end":11910278,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910279,"byte_end":11910282,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910283,"byte_end":11910333,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910334,"byte_end":11910337,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910338,"byte_end":11910349,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910350,"byte_end":11910383,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910384,"byte_end":11910417,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910418,"byte_end":11910451,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910452,"byte_end":11910459,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910460,"byte_end":11910463,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910464,"byte_end":11910533,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910534,"byte_end":11910571,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910572,"byte_end":11910611,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910612,"byte_end":11910657,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910658,"byte_end":11910705,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910706,"byte_end":11910736,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11910737,"byte_end":11910770,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11911332,"byte_end":11911339,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11911014,"byte_end":11911069,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11911070,"byte_end":11911073,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11911074,"byte_end":11911149,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11911150,"byte_end":11911230,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11911231,"byte_end":11911290,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912010,"byte_end":11912035,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":645}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11911925,"byte_end":11911998,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912380,"byte_end":11912400,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912056,"byte_end":11912130,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912131,"byte_end":11912134,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912135,"byte_end":11912214,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912215,"byte_end":11912258,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912259,"byte_end":11912262,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912263,"byte_end":11912316,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912317,"byte_end":11912320,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912321,"byte_end":11912351,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912744,"byte_end":11912747,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912653,"byte_end":11912732,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912974,"byte_end":11912981,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912871,"byte_end":11912946,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912951,"byte_end":11912962,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913203,"byte_end":11913219,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913031,"byte_end":11913072,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913077,"byte_end":11913080,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913085,"byte_end":11913158,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913163,"byte_end":11913191,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913640,"byte_end":11913660,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913284,"byte_end":11913318,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913323,"byte_end":11913326,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913331,"byte_end":11913401,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913406,"byte_end":11913481,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913486,"byte_end":11913558,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11913563,"byte_end":11913628,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918915,"byte_end":11918918,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918373,"byte_end":11918448,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918453,"byte_end":11918464,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918469,"byte_end":11918472,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918477,"byte_end":11918491,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918496,"byte_end":11918499,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918504,"byte_end":11918511,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918516,"byte_end":11918547,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918552,"byte_end":11918600,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918605,"byte_end":11918608,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918613,"byte_end":11918654,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918659,"byte_end":11918694,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918699,"byte_end":11918730,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918735,"byte_end":11918766,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918771,"byte_end":11918800,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918805,"byte_end":11918825,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918830,"byte_end":11918852,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918857,"byte_end":11918864,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918869,"byte_end":11918891,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918896,"byte_end":11918903,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920103,"byte_end":11920113,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919582,"byte_end":11919631,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919636,"byte_end":11919639,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919644,"byte_end":11919676,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919681,"byte_end":11919684,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919689,"byte_end":11919757,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919762,"byte_end":11919765,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919770,"byte_end":11919784,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919789,"byte_end":11919792,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919797,"byte_end":11919804,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919809,"byte_end":11919840,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919845,"byte_end":11919893,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919898,"byte_end":11919901,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919906,"byte_end":11919947,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919952,"byte_end":11919987,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11919992,"byte_end":11920013,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920018,"byte_end":11920040,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920045,"byte_end":11920052,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920057,"byte_end":11920079,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920084,"byte_end":11920091,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920745,"byte_end":11920758,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920212,"byte_end":11920264,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920269,"byte_end":11920272,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920277,"byte_end":11920315,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920320,"byte_end":11920323,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920328,"byte_end":11920396,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920401,"byte_end":11920404,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920409,"byte_end":11920423,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920428,"byte_end":11920431,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920436,"byte_end":11920443,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920448,"byte_end":11920479,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920484,"byte_end":11920532,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920537,"byte_end":11920540,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920545,"byte_end":11920586,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920591,"byte_end":11920626,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920631,"byte_end":11920655,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920660,"byte_end":11920682,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920687,"byte_end":11920694,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920699,"byte_end":11920721,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920726,"byte_end":11920733,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921391,"byte_end":11921404,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920858,"byte_end":11920910,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920915,"byte_end":11920918,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920923,"byte_end":11920961,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920966,"byte_end":11920969,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11920974,"byte_end":11921042,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921047,"byte_end":11921050,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921055,"byte_end":11921069,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921074,"byte_end":11921077,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921082,"byte_end":11921089,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921094,"byte_end":11921125,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921130,"byte_end":11921178,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921183,"byte_end":11921186,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921191,"byte_end":11921232,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921237,"byte_end":11921272,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921277,"byte_end":11921301,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921306,"byte_end":11921328,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921333,"byte_end":11921340,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921345,"byte_end":11921367,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921372,"byte_end":11921379,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922485,"byte_end":11922501,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921573,"byte_end":11921602,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921607,"byte_end":11921610,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921615,"byte_end":11921687,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921692,"byte_end":11921717,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921722,"byte_end":11921725,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921730,"byte_end":11921802,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921807,"byte_end":11921876,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921881,"byte_end":11921954,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921959,"byte_end":11921971,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921976,"byte_end":11921979,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11921984,"byte_end":11922059,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922064,"byte_end":11922125,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922130,"byte_end":11922133,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922138,"byte_end":11922152,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922157,"byte_end":11922160,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922165,"byte_end":11922172,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922177,"byte_end":11922208,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922213,"byte_end":11922261,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922266,"byte_end":11922269,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922274,"byte_end":11922315,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922320,"byte_end":11922355,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922360,"byte_end":11922395,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922400,"byte_end":11922422,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922427,"byte_end":11922434,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922439,"byte_end":11922461,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922466,"byte_end":11922473,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923162,"byte_end":11923181,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922598,"byte_end":11922661,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922666,"byte_end":11922669,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922674,"byte_end":11922725,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922730,"byte_end":11922733,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922738,"byte_end":11922806,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922811,"byte_end":11922814,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922819,"byte_end":11922833,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922838,"byte_end":11922841,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922846,"byte_end":11922853,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922858,"byte_end":11922889,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922894,"byte_end":11922942,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922947,"byte_end":11922950,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11922955,"byte_end":11922996,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923001,"byte_end":11923036,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923041,"byte_end":11923072,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923077,"byte_end":11923099,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923104,"byte_end":11923111,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923116,"byte_end":11923138,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923143,"byte_end":11923150,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923840,"byte_end":11923859,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923350,"byte_end":11923416,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923421,"byte_end":11923424,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923429,"byte_end":11923484,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923489,"byte_end":11923492,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923497,"byte_end":11923511,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923516,"byte_end":11923519,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923524,"byte_end":11923531,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923536,"byte_end":11923567,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923572,"byte_end":11923620,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923625,"byte_end":11923628,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923633,"byte_end":11923674,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923679,"byte_end":11923714,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923719,"byte_end":11923750,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923755,"byte_end":11923777,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923782,"byte_end":11923789,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923794,"byte_end":11923816,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923821,"byte_end":11923828,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924413,"byte_end":11924430,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11923962,"byte_end":11924035,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924040,"byte_end":11924058,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924063,"byte_end":11924066,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924071,"byte_end":11924085,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924090,"byte_end":11924093,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924098,"byte_end":11924105,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924110,"byte_end":11924141,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924146,"byte_end":11924194,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924199,"byte_end":11924202,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924207,"byte_end":11924248,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924253,"byte_end":11924288,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924293,"byte_end":11924323,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924328,"byte_end":11924350,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924355,"byte_end":11924362,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924367,"byte_end":11924389,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924394,"byte_end":11924401,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925080,"byte_end":11925088,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924531,"byte_end":11924594,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924599,"byte_end":11924602,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924607,"byte_end":11924668,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924673,"byte_end":11924676,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924681,"byte_end":11924735,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924740,"byte_end":11924743,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924748,"byte_end":11924762,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924767,"byte_end":11924770,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924775,"byte_end":11924782,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924787,"byte_end":11924818,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924823,"byte_end":11924871,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924876,"byte_end":11924879,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924884,"byte_end":11924925,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924930,"byte_end":11924965,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924970,"byte_end":11924990,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11924995,"byte_end":11925017,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925022,"byte_end":11925029,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925034,"byte_end":11925056,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925061,"byte_end":11925068,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925608,"byte_end":11925617,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925186,"byte_end":11925249,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925254,"byte_end":11925257,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925262,"byte_end":11925276,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925281,"byte_end":11925284,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925289,"byte_end":11925296,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925301,"byte_end":11925349,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925354,"byte_end":11925375,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925380,"byte_end":11925415,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925420,"byte_end":11925451,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925456,"byte_end":11925487,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925492,"byte_end":11925521,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925526,"byte_end":11925546,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925551,"byte_end":11925572,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925577,"byte_end":11925584,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925589,"byte_end":11925596,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926273,"byte_end":11926281,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925769,"byte_end":11925822,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925827,"byte_end":11925830,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925835,"byte_end":11925849,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925854,"byte_end":11925857,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925862,"byte_end":11925869,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925874,"byte_end":11925905,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925910,"byte_end":11925958,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925963,"byte_end":11925966,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11925971,"byte_end":11926012,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926017,"byte_end":11926052,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926057,"byte_end":11926088,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926093,"byte_end":11926124,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926129,"byte_end":11926158,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926163,"byte_end":11926183,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926188,"byte_end":11926210,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926215,"byte_end":11926222,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926227,"byte_end":11926249,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926254,"byte_end":11926261,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926854,"byte_end":11926863,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926445,"byte_end":11926499,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926504,"byte_end":11926507,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926512,"byte_end":11926526,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926531,"byte_end":11926534,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926539,"byte_end":11926546,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926551,"byte_end":11926583,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926588,"byte_end":11926638,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926643,"byte_end":11926687,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926692,"byte_end":11926727,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926732,"byte_end":11926763,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926768,"byte_end":11926791,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926796,"byte_end":11926803,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926808,"byte_end":11926830,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11926835,"byte_end":11926842,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927472,"byte_end":11927482,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927024,"byte_end":11927073,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927078,"byte_end":11927081,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927086,"byte_end":11927100,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927105,"byte_end":11927108,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927113,"byte_end":11927120,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927125,"byte_end":11927170,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927175,"byte_end":11927225,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927230,"byte_end":11927286,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927291,"byte_end":11927304,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927309,"byte_end":11927344,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927349,"byte_end":11927380,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927385,"byte_end":11927409,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927414,"byte_end":11927421,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927426,"byte_end":11927448,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927453,"byte_end":11927460,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11928861,"byte_end":11928871,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11928618,"byte_end":11928705,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11928706,"byte_end":11928709,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11928710,"byte_end":11928748,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11928749,"byte_end":11928787,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929971,"byte_end":11929974,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929552,"byte_end":11929612,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929617,"byte_end":11929620,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929625,"byte_end":11929635,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929640,"byte_end":11929643,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929648,"byte_end":11929720,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929725,"byte_end":11929798,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929803,"byte_end":11929870,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929875,"byte_end":11929878,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929883,"byte_end":11929959,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931105,"byte_end":11931124,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930132,"byte_end":11930192,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930197,"byte_end":11930200,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930205,"byte_end":11930268,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930273,"byte_end":11930351,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930356,"byte_end":11930423,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930428,"byte_end":11930500,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930505,"byte_end":11930575,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930580,"byte_end":11930603,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930608,"byte_end":11930611,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930616,"byte_end":11930626,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930631,"byte_end":11930634,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930639,"byte_end":11930714,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930719,"byte_end":11930792,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930797,"byte_end":11930873,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930878,"byte_end":11930951,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11930956,"byte_end":11931026,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931031,"byte_end":11931034,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931039,"byte_end":11931093,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931690,"byte_end":11931700,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931252,"byte_end":11931302,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931307,"byte_end":11931310,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931315,"byte_end":11931322,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931327,"byte_end":11931346,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931351,"byte_end":11931389,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931394,"byte_end":11931397,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931402,"byte_end":11931436,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931441,"byte_end":11931488,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931493,"byte_end":11931500,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931505,"byte_end":11931512,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931517,"byte_end":11931555,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931560,"byte_end":11931563,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931568,"byte_end":11931621,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931626,"byte_end":11931666,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11931671,"byte_end":11931678,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11936025,"byte_end":11936046,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11935979,"byte_end":11936020,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11936081,"byte_end":11936083,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11936052,"byte_end":11936076,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11935957,"byte_end":11935972,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":883}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11935875,"byte_end":11935930,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11938005,"byte_end":11938022,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11936819,"byte_end":11936960,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11936961,"byte_end":11936964,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11936965,"byte_end":11937003,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937004,"byte_end":11937042,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937043,"byte_end":11937046,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937047,"byte_end":11937060,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937061,"byte_end":11937128,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937129,"byte_end":11937132,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937133,"byte_end":11937166,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937167,"byte_end":11937196,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937197,"byte_end":11937200,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937201,"byte_end":11937208,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937209,"byte_end":11937265,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937266,"byte_end":11937300,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937301,"byte_end":11937304,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937305,"byte_end":11937310,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937311,"byte_end":11937358,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937359,"byte_end":11937412,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937413,"byte_end":11937490,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937491,"byte_end":11937526,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937527,"byte_end":11937548,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937549,"byte_end":11937599,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937600,"byte_end":11937663,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937664,"byte_end":11937727,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937728,"byte_end":11937791,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937792,"byte_end":11937848,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937849,"byte_end":11937898,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937899,"byte_end":11937911,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937912,"byte_end":11937919,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937920,"byte_end":11937927,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11937928,"byte_end":11937931,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939357,"byte_end":11939360,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11938915,"byte_end":11938983,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11938988,"byte_end":11938991,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11938996,"byte_end":11939006,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939011,"byte_end":11939014,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939019,"byte_end":11939098,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939103,"byte_end":11939177,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939182,"byte_end":11939249,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939254,"byte_end":11939257,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939262,"byte_end":11939345,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940671,"byte_end":11940690,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939640,"byte_end":11939708,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939713,"byte_end":11939716,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939721,"byte_end":11939791,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939796,"byte_end":11939882,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939887,"byte_end":11939957,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11939962,"byte_end":11940039,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940044,"byte_end":11940114,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940119,"byte_end":11940142,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940147,"byte_end":11940150,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940155,"byte_end":11940165,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940170,"byte_end":11940173,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940178,"byte_end":11940260,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940265,"byte_end":11940338,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940343,"byte_end":11940420,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940425,"byte_end":11940498,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940503,"byte_end":11940578,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940583,"byte_end":11940586,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940591,"byte_end":11940659,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941478,"byte_end":11941488,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11940947,"byte_end":11940998,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941003,"byte_end":11941006,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941011,"byte_end":11941018,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941023,"byte_end":11941042,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941047,"byte_end":11941092,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941097,"byte_end":11941100,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941105,"byte_end":11941177,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941182,"byte_end":11941229,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941234,"byte_end":11941241,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941246,"byte_end":11941253,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941258,"byte_end":11941303,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941308,"byte_end":11941311,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941316,"byte_end":11941409,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941414,"byte_end":11941454,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941459,"byte_end":11941466,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945583,"byte_end":11945605,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945536,"byte_end":11945578,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945641,"byte_end":11945643,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945611,"byte_end":11945636,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945507,"byte_end":11945529,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError {\n\n    /// The maximum chunk length was exceeded.\n    MaxChunkLengthExceeded,\n\n    /// An IO error occurred.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":935}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945424,"byte_end":11945480,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":150},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":273}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":77874,"byte_end":77887,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":77743,"byte_end":77816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":77817,"byte_end":77820,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":77821,"byte_end":77862,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78081,"byte_end":78084,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78036,"byte_end":78069,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78248,"byte_end":78253,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78211,"byte_end":78236,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78359,"byte_end":78370,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78305,"byte_end":78347,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78485,"byte_end":78495,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78440,"byte_end":78473,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":79229,"byte_end":79241,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78556,"byte_end":78604,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78609,"byte_end":78612,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78617,"byte_end":78658,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78663,"byte_end":78666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78671,"byte_end":78733,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78738,"byte_end":78798,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78803,"byte_end":78863,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78868,"byte_end":78871,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78876,"byte_end":78951,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78956,"byte_end":79024,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":79029,"byte_end":79105,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":79110,"byte_end":79178,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":79183,"byte_end":79217,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80669,"byte_end":80686,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80385,"byte_end":80437,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80442,"byte_end":80445,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80450,"byte_end":80526,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80531,"byte_end":80565,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80570,"byte_end":80573,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80578,"byte_end":80657,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81146,"byte_end":81157,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80759,"byte_end":80801,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80806,"byte_end":80809,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80814,"byte_end":80887,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80892,"byte_end":80932,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80937,"byte_end":80940,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":80945,"byte_end":81015,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81020,"byte_end":81054,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81059,"byte_end":81062,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81067,"byte_end":81134,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82300,"byte_end":82317,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":243}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82100,"byte_end":82157,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82158,"byte_end":82161,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82162,"byte_end":82229,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82230,"byte_end":82288,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82495,"byte_end":82498,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82412,"byte_end":82483,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83079,"byte_end":83082,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82864,"byte_end":82916,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82921,"byte_end":82924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82929,"byte_end":83001,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83006,"byte_end":83067,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83525,"byte_end":83532,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83284,"byte_end":83336,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83341,"byte_end":83344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83349,"byte_end":83422,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83427,"byte_end":83497,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":83502,"byte_end":83513,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85372,"byte_end":85379,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85308,"byte_end":85360,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85665,"byte_end":85669,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85610,"byte_end":85653,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":1019},{"krate":0,"index":1032},{"krate":0,"index":1028},{"krate":0,"index":290},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":310},{"krate":0,"index":316}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":86782,"byte_end":86817,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88764,"byte_end":88768,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88777,"byte_end":88782,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88745,"byte_end":88751,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1025}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":86994,"byte_end":87100,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87101,"byte_end":87104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87105,"byte_end":87195,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87196,"byte_end":87199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87200,"byte_end":87235,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87236,"byte_end":87239,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87240,"byte_end":87253,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87254,"byte_end":87257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87258,"byte_end":87295,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87296,"byte_end":87299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87300,"byte_end":87319,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87320,"byte_end":87362,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87363,"byte_end":87413,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87414,"byte_end":87465,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87466,"byte_end":87484,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87485,"byte_end":87506,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87507,"byte_end":87549,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87550,"byte_end":87583,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87584,"byte_end":87600,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87601,"byte_end":87695,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87696,"byte_end":87706,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87707,"byte_end":87710,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87711,"byte_end":87758,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87759,"byte_end":87764,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87765,"byte_end":87772,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87773,"byte_end":87776,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87977,"byte_end":87980,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":87981,"byte_end":88067,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88068,"byte_end":88078,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88079,"byte_end":88082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88083,"byte_end":88090,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88091,"byte_end":88126,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88127,"byte_end":88169,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88170,"byte_end":88220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88221,"byte_end":88272,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88273,"byte_end":88276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88277,"byte_end":88295,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88296,"byte_end":88317,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88318,"byte_end":88360,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88361,"byte_end":88408,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88409,"byte_end":88425,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88426,"byte_end":88475,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88476,"byte_end":88486,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88487,"byte_end":88490,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88491,"byte_end":88524,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88525,"byte_end":88565,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88566,"byte_end":88598,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88599,"byte_end":88604,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88605,"byte_end":88612,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":88613,"byte_end":88635,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856341,"byte_end":11856351,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856502,"byte_end":11856512,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856839,"byte_end":11856849,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867027,"byte_end":11867036,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867236,"byte_end":11867246,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867397,"byte_end":11867406,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867729,"byte_end":11867739,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867985,"byte_end":11867993,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11868090,"byte_end":11868098,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11868209,"byte_end":11868217,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11868317,"byte_end":11868325,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11868435,"byte_end":11868445,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11874027,"byte_end":11874037,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11876873,"byte_end":11876879,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880691,"byte_end":11880697,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11886012,"byte_end":11886018,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11886334,"byte_end":11886340,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887055,"byte_end":11887061,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11888101,"byte_end":11888112,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889039,"byte_end":11889049,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889938,"byte_end":11889948,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11892045,"byte_end":11892055,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11892368,"byte_end":11892378,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11893104,"byte_end":11893114,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894093,"byte_end":11894104,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894460,"byte_end":11894471,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11896580,"byte_end":11896591,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11897355,"byte_end":11897366,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11897607,"byte_end":11897618,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912626,"byte_end":11912646,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11915979,"byte_end":11915999,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11916885,"byte_end":11916905,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918246,"byte_end":11918266,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918359,"byte_end":11918366,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927965,"byte_end":11927972,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11928098,"byte_end":11928123,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11928281,"byte_end":11928306,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11928441,"byte_end":11928466,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929535,"byte_end":11929545,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11932087,"byte_end":11932097,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11935473,"byte_end":11935483,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11935806,"byte_end":11935816,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11936121,"byte_end":11936136,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11936418,"byte_end":11936433,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11936550,"byte_end":11936565,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11938891,"byte_end":11938908,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941557,"byte_end":11941574,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11944866,"byte_end":11944883,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945247,"byte_end":11945264,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945681,"byte_end":11945703,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11946032,"byte_end":11946054,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11946185,"byte_end":11946207,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":346}},{"kind":"Mod","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\mod.rs","byte_start":11854753,"byte_end":11854769,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":622}},{"kind":"Mod","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":274}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856341,"byte_end":11856351,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856502,"byte_end":11856512,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\bytes_codec.rs","byte_start":11856839,"byte_end":11856849,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867027,"byte_end":11867036,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867236,"byte_end":11867246,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867397,"byte_end":11867406,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867729,"byte_end":11867739,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11867985,"byte_end":11867993,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1748}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11868090,"byte_end":11868098,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1751}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11868209,"byte_end":11868217,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1748}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11868317,"byte_end":11868325,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1751}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11868435,"byte_end":11868445,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1168},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_impl.rs","byte_start":11874027,"byte_end":11874037,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1168},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11876873,"byte_end":11876879,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11880691,"byte_end":11880697,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11886012,"byte_end":11886018,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1118},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11886334,"byte_end":11886340,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1118},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11887055,"byte_end":11887061,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1118},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed.rs","byte_start":11888101,"byte_end":11888112,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889039,"byte_end":11889049,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11889938,"byte_end":11889948,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11892045,"byte_end":11892055,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1077},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11892368,"byte_end":11892378,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1077},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_read.rs","byte_start":11893104,"byte_end":11893114,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894093,"byte_end":11894104,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11894460,"byte_end":11894471,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11896580,"byte_end":11896591,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1036},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11897355,"byte_end":11897366,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1036},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\framed_write.rs","byte_start":11897607,"byte_end":11897618,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1036},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11912626,"byte_end":11912646,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11915979,"byte_end":11915999,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11916885,"byte_end":11916905,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918246,"byte_end":11918266,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11918359,"byte_end":11918366,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11927965,"byte_end":11927972,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":818},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11928098,"byte_end":11928123,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":644},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11928281,"byte_end":11928306,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":644},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\length_delimited.rs","byte_start":11928441,"byte_end":11928466,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11929535,"byte_end":11929545,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11932087,"byte_end":11932097,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11935473,"byte_end":11935483,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11935806,"byte_end":11935816,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11936121,"byte_end":11936136,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11936418,"byte_end":11936433,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\lines_codec.rs","byte_start":11936550,"byte_end":11936565,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":880},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11938891,"byte_end":11938908,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11941557,"byte_end":11941574,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":888},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11944866,"byte_end":11944883,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":888},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945247,"byte_end":11945264,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":888},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11945681,"byte_end":11945703,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":932},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11946032,"byte_end":11946054,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":932},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\codec\\any_delimiter_codec.rs","byte_start":11946185,"byte_end":11946207,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":932},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1011},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":206},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1019},"to":{"krate":15,"index":164}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1019},"to":{"krate":15,"index":136}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1019},"to":{"krate":15,"index":189}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1019},"to":{"krate":15,"index":215}},{"span":{"file_name":"C:\\Users\\ruben\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.7\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1019},"to":{"krate":13,"index":68}}]}